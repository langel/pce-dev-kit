List of things to do:
---------------------

--------------
PROBLEM:

It appears that #defpal (and other #defxxx commands) may occasionally cause
'bank overflow' errors; they should place data in the same way as
their #incxxx counterparts do.  (See Bt)

--------------
ENHANCEMENT:

Add fast BLiT to load_vram() to blit 32 bytes (16 words) at a time
instead of looping single bytes.  (only 32 bytes so as not to delay
interrupts beyond reasonable threshhold)

--------------
PROBLEM:

Long multi-line commands such as #defspr() require multi-line input, since
the input line buffer is too short to contain the entire command.
ie. could be over 400 bytes in all:

#defspr(name_up_to_24, LOC_UP_TO_24,0x0f,
0x00000000,0x00000000, (times 16 lines)
0x00000000,0x00000000);

--------------
PROBLEM:

Long multi-line commands such as #defspr() result in multi-line output.
This output uses '\' for continuation.

If you compile with '-v' (for example) to get in-line comments containing
the original 'C' code, the original command will be interspersed with the
generated code.  The comments will ruin the continuity expected by the
continuation characters, causing an error in the assemble step.

--------------
CLARIFICATION/ALTERATION OF EXISTING FUNCTION:

Globals.h should probably not be implicitly included for HuCard images

--------------
NEW FEATURE:

Sound player

*** Already known:

- how to manipulate sound channels, possibly except LFO and
  noise (info may not be complete on these points)

- choose music data format (Hudson, for compatibility between CDROM and HuCard)

- PSG player in CDROM system card is understood

*** Difficulties:

- write player and patch it into a likely interrupt

- how to create music data ?  (.mid converter ?  new language ?)

- how to control voices separately for in-game sound effects
  which occur over top of music (ie. programmatic interface ?
  dynamic allocation of voices ?  partitioning of voices ?)

--------------
EXPANSION OF CURRENT FUNCTIONALITY:

CONST_BANK is 8KB, and gets filled with all the "const int array[] = {1.2};"
definitions.

However, it is also filled with many text strings which are literals used
throughout the program.  These should probably be changed into far pointer
strings and moved to the DATA segment under user program and allow greater
numbers of strings.

The "const int array[] .. " definition should be enhanced to allow the "far"
modifier to group these definitions also into the DATA bank of the user program
and allow greater numbers of const definitons.

In the event that the CONST_BANK is empty, the DATA_BANK should be moved back
by one.  Indeed, the CONST_BANK should be renamed to something like
LOCALDATA_BANK since it is always mapped.


--------------
OPTIMIZATION:

For constructs such as:
<variable> = 0;

HuC generates:
__ldwi 0
__stw  <variable> (or __stx <variable)

For the special case of the literal '0':
(1) the '__ldwi 0' should be dropped
(2) stx <variable> should be replaced with stz <variable>, OR
__stw <variable> should be replaced with __stz <variable>
(3) if __stz <variable> doesn't exist, it should be written

UPDATES:
- use stwz or __stwz
- also check that the value isn't continuing such as it would
  in the expression "a=b=c=0;"
- not a big gain, so not a high priority

--------------
